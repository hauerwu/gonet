// Code generated by protoc-gen-go.
// source: example.proto
// DO NOT EDIT!

package example

import proto "code.google.com/p/goprotobuf/proto"
import json "encoding/json"
import math "math"

// Reference proto, json, and math imports to suppress error if they are not otherwise used.
var _ = proto.Marshal
var _ = &json.SyntaxError{}
var _ = math.Inf

type FOO int32

const (
	FOO_X FOO = 17
)

var FOO_name = map[int32]string{
	17: "X",
}
var FOO_value = map[string]int32{
	"X": 17,
}

func (x FOO) Enum() *FOO {
	p := new(FOO)
	*p = x
	return p
}
func (x FOO) String() string {
	return proto.EnumName(FOO_name, int32(x))
}
func (x *FOO) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(FOO_value, data, "FOO")
	if err != nil {
		return err
	}
	*x = FOO(value)
	return nil
}

type Head struct {
	Cmd              *string `protobuf:"bytes,1,req,name=cmd" json:"cmd,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Head) Reset()         { *m = Head{} }
func (m *Head) String() string { return proto.CompactTextString(m) }
func (*Head) ProtoMessage()    {}

func (m *Head) GetCmd() string {
	if m != nil && m.Cmd != nil {
		return *m.Cmd
	}
	return ""
}

type Para struct {
	Id               *int32  `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Name             *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Para) Reset()         { *m = Para{} }
func (m *Para) String() string { return proto.CompactTextString(m) }
func (*Para) ProtoMessage()    {}

func (m *Para) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *Para) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

type Test struct {
	Head             *Head  `protobuf:"bytes,1,req,name=head" json:"head,omitempty"`
	Para             *Para  `protobuf:"bytes,2,req,name=para" json:"para,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Test) Reset()         { *m = Test{} }
func (m *Test) String() string { return proto.CompactTextString(m) }
func (*Test) ProtoMessage()    {}

func (m *Test) GetHead() *Head {
	if m != nil {
		return m.Head
	}
	return nil
}

func (m *Test) GetPara() *Para {
	if m != nil {
		return m.Para
	}
	return nil
}

func init() {
	proto.RegisterEnum("example.FOO", FOO_name, FOO_value)
}
